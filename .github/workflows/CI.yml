name: CI

on: [push]

jobs:
  build:
    name: Build & test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        archives: 'qtbase'

    - name: Clone dependencies
      run: |
        git clone --depth 1 https://github.com/VioletGiraffe/cpp-template-utils ../cpp-template-utils
        git clone --depth 1 https://github.com/VioletGiraffe/cpputils ../cpputils

    - name: Windows - setup MSBuild
      if: startsWith(matrix.os, 'windows')
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '[17.0,18.0)'

    - name: Windows - building tests
      if: startsWith(matrix.os, 'windows')
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        set PATH=%Qt5_DIR%;%PATH%;
        %Qt5_DIR%\bin\qmake.exe -v
        pushd tests
        call "%programfiles%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64 && "%Qt5_DIR%\bin\qmake.exe" -tp vc -r
        msbuild tests.sln /t:Build /p:Configuration=Release;PlatformToolset=v143
        popd

    - name: Linux - building tests
      if: startsWith(matrix.os, 'ubuntu')
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        sudo apt install -y gcc-12 g++-12
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 50
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
        g++ --version
        export PATH=$Qt5_DIR/bin/:$PATH
        export LD_LIBRARY_PATH=$Qt5_DIR/lib/:$LD_LIBRARY_PATH
        pushd tests
        $Qt5_DIR/bin/qmake -r CONFIG+=release
        make -j
        popd

    - name: Linux - running tests
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        lscpu
        ./tests/bin/release/test-app ~[benchmark]
        ./tests/bin/release/test-app [benchmark]
        if [ $? -ne 0 ]; then exit 1; fi
        sudo apt install -y inux-tools-generic inux-tools-common
        sudo perf record ./tests/bin/release/test-app ~[benchmark]
        perf report

    - name: Windows - running tests
      if: startsWith(matrix.os, 'windows')
      shell: cmd
      run: |
        .\tests\bin\release\test-app.exe ~[benchmark]
        IF NOT %ERRORLEVEL% == 0 EXIT /B 1
        .\tests\bin\release\test-app.exe [benchmark]
